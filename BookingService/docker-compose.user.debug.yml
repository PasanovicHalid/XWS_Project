version: "3.8"

name: booking-app-debug

services:
  authentification_service:
    image: authentification_service
    container_name: authentification_service
    build:
      context: .
      dockerfile: ./AuthentificationService/Dockerfile
    restart: on-failure
    ports:
      - ${AUTHENTIFICATION_SERVICE_PORT}:${AUTHENTIFICATION_SERVICE_PORT}
      - 11001:11001
    environment:
      AUTHENTIFICATION_DB_HOST: ${AUTHENTIFICATION_DB_HOST}
      AUTHENTIFICATION_DB_PORT: ${AUTHENTIFICATION_DB_PORT}
    depends_on:
      authentification_db:
        condition: service_healthy
    networks:
      - network

  user_service:
    image: user_service
    container_name: user_service
    build:
      context: .
      dockerfile: ./UserService/Dockerfile.debug
    restart: on-failure
    ports:
      - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
      - 11002:11002
    environment:
      USER_DB_HOST: ${USER_DB_HOST}
      USER_DB_PORT: ${USER_DB_PORT}
    depends_on:
      user_db:
        condition: service_healthy
    networks:
      - network

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./APIGateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
      - 11000:11000
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      AUTHENTIFICATION_SERVICE_HOST: ${AUTHENTIFICATION_SERVICE_HOST}
      AUTHENTIFICATION_SERVICE_PORT: ${AUTHENTIFICATION_SERVICE_PORT}
      USER_SERVICE_HOST: ${USER_SERVICE_HOST}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - authentification_service
    networks:
      - network

  authentification_db:
    image: mongo
    container_name: authentification_db
    restart: on-failure
    environment:
      MONGO_INITDB_DATABASE: ${AUTHENTIFICATION_DB_NAME}
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "${AUTHENTIFICATION_DB_EXTERNAL_PORT}:27017"
    volumes:
      - authentification_db:/data/db
    networks:
      - network

  user_db:
    image: mongo
    container_name: user_db
    restart: on-failure
    ports:
      - "${USER_DB_EXTERNAL_PORT}:27017"
    environment:
      MONGO_INITDB_DATABASE: ${USER_DB_NAME}
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - user_db:/data/db
    networks:
      - network

networks:
  network:
    driver: bridge
  
volumes:
  authentification_db:
  user_db: