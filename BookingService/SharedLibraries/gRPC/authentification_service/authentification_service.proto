syntax = "proto3";

option go_package = "github.com/PasanovicHalid/XWS_Project/BookingService/SharedLibraries/gRPC/authenticate";

package authenticate;

import "google/api/annotations.proto";
import "common/common.proto";

service AuthenticateService {
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/api/authenticate/login"
            body: "*"
        };
    }

    rpc Register(RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/api/authenticate/register"
            body: "*"
        };
    }

    rpc Remove(RemoveRequest) returns (RemoveResponse) {
        option (google.api.http) = {
            delete: "/api/authenticate/remove/{identityId}"
        };
    }

    rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
        option (google.api.http) = {
            put: "/api/authenticate/changePassword"
            body: "*"
        };
    }

    rpc ChangeUsername(ChangeUsernameRequest) returns (ChangeUsernameResponse) {
        option (google.api.http) = {
            put: "/api/authenticate/changeUsername"
            body: "*"
        };
    }

    rpc GetIdentityByUsername (GetIdentityByUsernameRequest) returns (GetIdentityByUsernameResponse) {
        option (google.api.http) = {
            get: "/api/authenticate/user/getIdentityByUsername/{username}"
        };
    }

    rpc GetPublicKey(GetPublicKeyRequest) returns (GetPublicKeyResponse) {
        option (google.api.http) = {
            get: "/api/authenticate/getPublicKey"
        };
    }

    rpc UpdateApiKey(UpdateApiKeyRequest) returns (UpdateApiKeyResponse) {
        option (google.api.http) = {
            put: "/api/authenticate/updateApiKey"
            body: "*"
        };
    }
}

message RequestResult {
    int32 code = 1;
    string message = 2;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    common.RequestResult requestResult = 1;
    string token = 2;
}

message ChangePasswordRequest {
    string username = 1;
    string oldPassword = 2;
    string newPassword = 3;
}

message ChangePasswordResponse {
    common.RequestResult requestResult = 1;
}

message ChangeUsernameRequest {
    string username = 1;
    string password = 2;
    string newUsername = 3;
}

message ChangeUsernameResponse {
    common.RequestResult requestResult = 1;
}

message GetPublicKeyRequest {
}

message GetPublicKeyResponse {
    common.RequestResult requestResult = 1;
    string publicKey = 2;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    bool isHost = 3;
}

message RegisterResponse {
    common.RequestResult requestResult = 1;
    string token = 2;
}

message GetIdentityByUsernameRequest {
    string username = 1;
}

message GetIdentityByUsernameResponse {
    common.RequestResult requestResult = 1;
    string identityId = 2;
}

message RemoveRequest {
    string identityId = 1;
}

message RemoveResponse {
    common.RequestResult requestResult = 1;
}

message UpdateApiKeyRequest {
    string identityId = 1;
    string apiKey = 2;
}

message UpdateApiKeyResponse {
    common.RequestResult requestResult = 1;
}